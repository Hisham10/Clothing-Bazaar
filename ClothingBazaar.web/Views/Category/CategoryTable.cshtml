@model ClothingBazaar.web.ViewModels.CategorySearchViewModel
@*We are explicitly telling the view that we will be receiving a list of Category from the controller.*@

@{
    ViewBag.Title = "Index";
}

<style>
    input.form-control::placeholder {
        opacity: 0.5;
    }
</style>
<br />

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-6">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-6">
                            <button class="btn btn-primary form-control" type="button" id="newCatBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <td>Category Name</td>
                <td>Products</td>
                <td class="wrap-td">Actions</td>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>

                        <td>@category.Products.Count</td>
                        @*To include the count of products, the issue we were facing was the number of products were
                            not being added into the category itself. For this we had to make changes in
                            Category.Services when we fetch the categories. There we used the 'INLCUDE' method to include
                            all the products related to that category when fetching the data.*@
                        <td class="wrap-td">
                            <button class="editCatBtn" data-id="@category.ID">Edit</button>
                            <button class="deleteCatBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="3" class="text-danger">No Categories found.</td></tr>
            }
        </tbody>
    </table>
</div>

@*<div class="row">
        <div class="col-md-12">
            <div class="title-section">
                <h2 class="title">
                    Category Table
                </h2>
            </div><!-- /.title-section -->
        </div><!-- /.col-md-12 -->
    </div>*@

@*<div>
        <form method="post">
            <div class="row">
                <div class="col-md-4">
                    <button type="button" id="newCatBtn">New Category</button>
                </div>
            </div>
        </form>
    </div>*@

@*<div>
        <table class="table table-striped">
            <thead class="thead-default">
                <tr>
                    <td>Category Name</td>
                    <td>Actions</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in Model)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            <button class="editCatBtn" data-id="@category.ID">Edit</button>
                            <button class="deleteCatBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>*@

<script>

    function focusAction() {
        $('html, body').animate({
            scrollTop: $("#createCategoryContainer").offset().top - 100
        }, 1000);
    }

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")', //Using URL helper instead of the hard coded URL which we used before.
                /*'/Category/CategoryTable',*/
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableCategoryContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    $(".deleteCatBtn").click(function () {
        focusAction();
        $.ajax({
            url: '/Category/Delete',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {

                $("#createCategoryContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });

    $(".editCatBtn").click(function () {
        focusAction();
        $.ajax({
            url: '/Category/Edit',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#createCategoryContainer").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });

    $("#newCatBtn").click(function () {
        $.ajax({
            url: '/Category/Create',
        })
            .done(function (response) {
                $("#createCategoryContainer").html(response);

                focusAction();
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
</script>